/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSG\": function() { return /* binding */ __N_SSG; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_layout__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/layout */ \"./components/layout.js\");\n/* harmony import */ var next_Link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/Link */ \"./node_modules/next/Link.js\");\n/* harmony import */ var next_Link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_Link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var slug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! slug */ \"./node_modules/slug/slug.js\");\n/* harmony import */ var slug__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(slug__WEBPACK_IMPORTED_MODULE_3__);\nvar _this = undefined;\n\n\n\n\nvar index = function(param) {\n    var characters = param.characters;\n    var _this1 = _this;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_layout__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: \"Rick and Morty \"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\Hasan\\\\Desktop\\\\Totem\\\\javaScript\\\\NextJS\\\\lesson2-fetchapi\\\\pages\\\\index.js\",\n                lineNumber: 9,\n                columnNumber: 7\n            }, _this),\n            characters.results.map(function(character) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                    as: \"/character/$slug(character.name)\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_Link__WEBPACK_IMPORTED_MODULE_2___default()), {\n                        href: \"/character/[slug]\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                            children: [\n                                \"  \",\n                                character.name\n                            ]\n                        }, void 0, true, {\n                            fileName: \"C:\\\\Users\\\\Hasan\\\\Desktop\\\\Totem\\\\javaScript\\\\NextJS\\\\lesson2-fetchapi\\\\pages\\\\index.js\",\n                            lineNumber: 13,\n                            columnNumber: 7\n                        }, _this1)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Hasan\\\\Desktop\\\\Totem\\\\javaScript\\\\NextJS\\\\lesson2-fetchapi\\\\pages\\\\index.js\",\n                        lineNumber: 12,\n                        columnNumber: 7\n                    }, _this1)\n                }, character.id, false, {\n                    fileName: \"C:\\\\Users\\\\Hasan\\\\Desktop\\\\Totem\\\\javaScript\\\\NextJS\\\\lesson2-fetchapi\\\\pages\\\\index.js\",\n                    lineNumber: 11,\n                    columnNumber: 7\n                }, _this1);\n            })\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\Hasan\\\\Desktop\\\\Totem\\\\javaScript\\\\NextJS\\\\lesson2-fetchapi\\\\pages\\\\index.js\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, _this);\n};\nvar __N_SSG = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOztBQUMwQztBQUNkO0FBQ0o7QUFFeEIsSUFBTUcsS0FBSyxHQUFHLGdCQUFrQjtRQUFoQkMsVUFBVSxTQUFWQSxVQUFVOztJQUN4QixxQkFDRSw4REFBQ0osMERBQU07OzBCQUNMLDhEQUFDSyxJQUFFOzBCQUFDLGlCQUFlOzs7OztxQkFBSztZQUN6QkQsVUFBVSxDQUFDRSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsU0FBQUEsU0FBUztxQ0FDL0IsOERBQUNDLElBQUU7b0JBQW9CQyxFQUFFLEVBQUcsa0NBQWdDOzhCQUM1RCw0RUFBQ1Qsa0RBQUk7d0JBQUNVLElBQUksRUFBQyxtQkFBbUI7a0NBQzlCLDRFQUFDQyxHQUFDOztnQ0FBQyxJQUFFO2dDQUFDSixTQUFTLENBQUNLLElBQUk7Ozs7OztrQ0FBSzs7Ozs7OEJBQ2xCO21CQUhFTCxTQUFTLENBQUNNLEVBQUU7Ozs7MEJBSWhCO2FBQ04sQ0FBQzs7Ozs7O2FBQ08sQ0FDVDtDQUNIOztBQWdCRCwrREFBZVgsS0FBSyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL2luZGV4LmpzP2JlZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVuZmV0Y2ggZnJvbSBcImlzb21vcnBoaWMtdW5mZXRjaFwiO1xyXG5pbXBvcnQgTGF5b3V0IGZyb20gXCIuLi9jb21wb25lbnRzL2xheW91dFwiO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L0xpbmsnXHJcbmltcG9ydCBzbHVnIGZyb20gJ3NsdWcnO1xyXG5cclxuY29uc3QgaW5kZXggPSAoe2NoYXJhY3RlcnN9KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxMYXlvdXQ+XHJcbiAgICAgIDxoMT5SaWNrIGFuZCBNb3J0eSA8L2gxPlxyXG4gICAge2NoYXJhY3RlcnMucmVzdWx0cy5tYXAoY2hhcmFjdGVyPT4oXHJcbiAgICAgIDxsaSBrZXk9e2NoYXJhY3Rlci5pZH0gYXM9e2AvY2hhcmFjdGVyLyRzbHVnKGNoYXJhY3Rlci5uYW1lKWB9PlxyXG4gICAgICA8TGluayBocmVmPVwiL2NoYXJhY3Rlci9bc2x1Z11cIj5cclxuICAgICAgPGE+ICB7Y2hhcmFjdGVyLm5hbWV9PC9hPlxyXG4gICAgICA8L0xpbms+XHJcbiAgICAgIDwvbGk+XHJcbiAgICApKX1cclxuICAgIDwvTGF5b3V0PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3RhdGljUHJvcHMoKXtcclxuICAvLyBkYXRhIGZldGNoXHJcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHVuZmV0Y2goXCJodHRwczovL3JpY2thbmRtb3J0eWFwaS5jb20vYXBpL2NoYXJhY3RlclwiKVxyXG4gIGNvbnN0IGNoYXJhY3RlcnMgPSBhd2FpdCBkYXRhLmpzb24oKTtcclxuICBjb25zb2xlLmxvZyhjaGFyYWN0ZXJzKTtcclxuICByZXR1cm57XHJcbiAgICBwcm9wczp7XHJcbiAgICAgIGNoYXJhY3RlcnNcclxuICAgIH1cclxuICB9XHJcblxyXG59XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XHJcbiJdLCJuYW1lcyI6WyJMYXlvdXQiLCJMaW5rIiwic2x1ZyIsImluZGV4IiwiY2hhcmFjdGVycyIsImgxIiwicmVzdWx0cyIsIm1hcCIsImNoYXJhY3RlciIsImxpIiwiYXMiLCJocmVmIiwiYSIsIm5hbWUiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ }),

/***/ "./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module) {

eval("var __dirname = \"/\";\n(function(){var e={991:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},293:function(e,r,t){\"use strict\";\r\n/*!\r\n * The buffer module from node.js, for the browser.\r\n *\r\n * @author   Feross Aboukhadijeh <https://feross.org>\r\n * @license  MIT\r\n */var f=t(991);var n=t(759);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},759:function(e,r){r.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(293);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/buffer/index.js\n");

/***/ }),

/***/ "./node_modules/slug/slug.js":
/*!***********************************!*\
  !*** ./node_modules/slug/slug.js ***!
  \***********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* global btoa */\n(function (root) {\n  let base64\n\n  // This function's sole purpose is to help us ignore lone surrogates so that\n  // malformed strings don't throw in the browser while being processed\n  // permissively in Node.js. If we didn't care about parity, we could get rid\n  // of it.\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt\n  function getWholeCharAndI (str, i) {\n    const code = str.charCodeAt(i)\n\n    // This is a coherence check. `code` should never be `NaN`.\n    /* istanbul ignore if */\n    if (isNaN(code)) {\n      throw new RangeError('Index ' + i + ' out of range for string \"' + str + '\"; please open an issue at https://github.com/Trott/slug/issues/new')\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return [str.charAt(i), i] // Non-surrogate character, keeping 'i' the same\n    }\n\n    // High surrogate\n    if (code >= 0xD800 && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        // High surrogate without following low surrogate\n        return [' ', i]\n      }\n      const next = str.charCodeAt(i + 1)\n      if (next < 0xDC00 || next > 0xDFFF) {\n        // High surrogate without following low surrogate\n        return [' ', i]\n      }\n      return [str.charAt(i) + str.charAt(i + 1), i + 1]\n    }\n\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      // Low surrogate without preceding high surrogate\n      return [' ', i]\n    }\n\n    const prev = str.charCodeAt(i - 1)\n\n    /* istanbul ignore else */\n    if (prev < 0xD800 || prev > 0xDBFF) {\n      // Low surrogate without preceding high surrogate\n      return [' ', i]\n    }\n\n    /* istanbul ignore next */\n    throw new Error('String \"' + str + '\" reaches code believed to be unreachable; please open an issue at https://github.com/Trott/slug/issues/new')\n  }\n\n  if (typeof window !== 'undefined') {\n    if (window.btoa) {\n      base64 = function (input) {\n        return btoa(unescape(encodeURIComponent(input)))\n      }\n    } else {\n      // Polyfill for environments that don't have btoa or Buffer class (notably, React Native).\n      // Based on https://github.com/davidchambers/Base64.js/blob/a121f75bb10c8dd5d557886c4b1069b31258d230/base64.js\n      base64 = function (input) {\n        const str = unescape(encodeURIComponent(input + ''))\n        let output = ''\n        for (\n          let block, charCode, idx = 0, map = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n          str.charAt(idx | 0) || (map = '=', idx % 1);\n          output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n        ) {\n          charCode = str.charCodeAt(idx += 3 / 4)\n          // TODO: The if condition may be guaranteed to be false. Verify and\n          // remove or otherwise write a test to cover it.\n          /* istanbul ignore if */\n          if (charCode > 0xFF) {\n            throw new Error(\"'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\")\n          }\n          block = block << 8 | charCode\n        }\n        return output\n      }\n    }\n  } else {\n    base64 = function (input) {\n      return Buffer.from(input).toString('base64')\n    }\n  }\n\n  // IE11 doesn't have Object.assign(), hence this MDN-supplied polyfill.\n  /* istanbul ignore if */\n  if (typeof Object.assign !== 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, 'assign', {\n      value: function assign (target, varArgs) { // .length of function is 2\n        'use strict'\n        if (target === null || target === undefined) {\n          throw new TypeError('Cannot convert undefined or null to object')\n        }\n\n        const to = Object(target)\n\n        for (let index = 1; index < arguments.length; index++) {\n          const nextSource = arguments[index]\n\n          if (nextSource !== null && nextSource !== undefined) {\n            // eslint-disable-next-line no-var\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey]\n              }\n            }\n          }\n        }\n        return to\n      },\n      writable: true,\n      configurable: true\n    })\n  }\n\n  function slug (string, opts) {\n    let result = slugify(string, opts)\n    // If output is an empty string, try slug for base64 of string.\n    if (result === '') {\n      // Get rid of lone surrogates.\n      let input = ''\n      for (let i = 0; i < string.length; i++) {\n        const charAndI = getWholeCharAndI(string, i)\n        i = charAndI[1]\n        input += charAndI[0]\n      }\n      result = slugify(base64(input), opts)\n    }\n    return result\n  }\n\n  const locales = {\n    // http://www.eki.ee/wgrs/rom1_bg.pdf\n    bg: { Й: 'Y', й: 'y', X: 'H', x: 'h', Ц: 'Ts', ц: 'ts', Щ: 'Sht', щ: 'sht', Ъ: 'A', ъ: 'a', Ь: 'Y', ь: 'y' },\n    // Need a reference URL for German, although this is pretty well-known.\n    de: { Ä: 'AE', ä: 'ae', Ö: 'OE', ö: 'oe', Ü: 'UE', ü: 'ue' },\n    // Need a reference URL for Serbian.\n    sr: { đ: 'dj', Đ: 'DJ' },\n    // https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/864314/ROMANIZATION_OF_UKRAINIAN.pdf\n    uk: { И: 'Y', и: 'y', Й: 'Y', й: 'y', Ц: 'Ts', ц: 'ts', Х: 'Kh', х: 'kh', Щ: 'Shch', щ: 'shch', Г: 'H', г: 'h' }\n  }\n\n  let defaultLocale = {}\n\n  function slugify (string, opts) {\n    if (typeof string !== 'string') {\n      throw new Error('slug() requires a string argument, received ' + typeof string)\n    }\n    if (typeof opts === 'string') { opts = { replacement: opts } }\n    opts = opts ? Object.assign({}, opts) : {}\n    opts.mode = opts.mode || slug.defaults.mode\n    const defaults = slug.defaults.modes[opts.mode]\n    const keys = ['replacement', 'multicharmap', 'charmap', 'remove', 'lower', 'trim']\n    for (let key, i = 0, l = keys.length; i < l; i++) {\n      key = keys[i]\n      opts[key] = (key in opts) ? opts[key] : defaults[key]\n    }\n    const localeMap = locales[opts.locale] || defaultLocale\n\n    let lengths = []\n    // \"let\" instead of \"const\" in next line is for IE11 compatibilty\n    for (let key in opts.multicharmap) { // eslint-disable-line prefer-const\n      if (!Object.prototype.hasOwnProperty.call(opts.multicharmap, key)) { continue }\n\n      const len = key.length\n      if (lengths.indexOf(len) === -1) { lengths.push(len) }\n    }\n\n    // We want to match the longest string if there are multiple matches, so\n    // sort lengths in descending order.\n    lengths = lengths.sort(function (a, b) { return b - a })\n\n    const disallowedChars = opts.mode === 'rfc3986' ? /[^\\w\\s\\-.~]/ : /[^A-Za-z0-9\\s]/\n\n    let result = ''\n    for (let char, i = 0, l = string.length; i < l; i++) {\n      char = string[i]\n      let matchedMultichar = false\n      for (let j = 0; j < lengths.length; j++) {\n        const len = lengths[j]\n        const str = string.substr(i, len)\n        if (opts.multicharmap[str]) {\n          i += len - 1\n          char = opts.multicharmap[str]\n          matchedMultichar = true\n          break\n        }\n      }\n      if (!matchedMultichar) {\n        if (localeMap[char]) {\n          char = localeMap[char]\n        } else if (opts.charmap[char]) {\n          char = opts.charmap[char].replace(opts.replacement, ' ')\n        } else if (char.includes(opts.replacement)) {\n          // preserve the replacement character in case it is excluded by disallowedChars\n          char = char.replace(opts.replacement, ' ')\n        } else {\n          char = char.replace(disallowedChars, '')\n        }\n      }\n      result += char\n    }\n\n    if (opts.remove) {\n      result = result.replace(opts.remove, '')\n    }\n    if (opts.trim) {\n      result = result.trim()\n    }\n    result = result.replace(/\\s+/g, opts.replacement) // convert spaces\n    if (opts.lower) {\n      result = result.toLowerCase()\n    }\n    return result\n  }\n\n  const initialMulticharmap = {\n    // multibyte devanagari characters (hindi, sanskrit, etc.)\n    फ़: 'Fi',\n    ग़: 'Ghi',\n    ख़: 'Khi',\n    क़: 'Qi',\n    ड़: 'ugDha',\n    ढ़: 'ugDhha',\n    य़: 'Yi',\n    ज़: 'Za',\n    // hebrew\n    // Refs: http://www.eki.ee/wgrs/rom1_he.pdf\n    // Refs: https://en.wikipedia.org/wiki/Niqqud\n    בִי: 'i',\n    בֵ: 'e',\n    בֵי: 'e',\n    בֶ: 'e',\n    בַ: 'a',\n    בָ: 'a',\n    בֹ: 'o',\n    וֹ: 'o',\n    בֻ: 'u',\n    וּ: 'u',\n    בּ: 'b',\n    כּ: 'k',\n    ךּ: 'k',\n    פּ: 'p',\n    שׁ: 'sh',\n    שׂ: 's',\n    בְ: 'e',\n    חֱ: 'e',\n    חֲ: 'a',\n    חֳ: 'o',\n    בִ: 'i'\n  }\n\n  // https://github.com/django/django/blob/master/django/contrib/admin/static/admin/js/urlify.js\n  const initialCharmap = {\n    // latin\n    À: 'A',\n    Á: 'A',\n    Â: 'A',\n    Ã: 'A',\n    Ä: 'A',\n    Å: 'A',\n    Æ: 'AE',\n    Ç: 'C',\n    È: 'E',\n    É: 'E',\n    Ê: 'E',\n    Ë: 'E',\n    Ì: 'I',\n    Í: 'I',\n    Î: 'I',\n    Ï: 'I',\n    Ð: 'D',\n    Ñ: 'N',\n    Ò: 'O',\n    Ó: 'O',\n    Ô: 'O',\n    Õ: 'O',\n    Ö: 'O',\n    Ő: 'O',\n    Ø: 'O',\n    Ō: 'O',\n    Ù: 'U',\n    Ú: 'U',\n    Û: 'U',\n    Ü: 'U',\n    Ű: 'U',\n    Ý: 'Y',\n    Þ: 'TH',\n    ß: 'ss',\n    à: 'a',\n    á: 'a',\n    â: 'a',\n    ã: 'a',\n    ä: 'a',\n    å: 'a',\n    æ: 'ae',\n    ç: 'c',\n    è: 'e',\n    é: 'e',\n    ê: 'e',\n    ë: 'e',\n    ì: 'i',\n    í: 'i',\n    î: 'i',\n    ï: 'i',\n    ð: 'd',\n    ñ: 'n',\n    ò: 'o',\n    ó: 'o',\n    ô: 'o',\n    õ: 'o',\n    ö: 'o',\n    ő: 'o',\n    ø: 'o',\n    ō: 'o',\n    Œ: 'OE',\n    œ: 'oe',\n    ù: 'u',\n    ú: 'u',\n    û: 'u',\n    ü: 'u',\n    ű: 'u',\n    ý: 'y',\n    þ: 'th',\n    ÿ: 'y',\n    ẞ: 'SS',\n    // greek\n    α: 'a',\n    β: 'b',\n    γ: 'g',\n    δ: 'd',\n    ε: 'e',\n    ζ: 'z',\n    η: 'h',\n    θ: '8',\n    ι: 'i',\n    κ: 'k',\n    λ: 'l',\n    μ: 'm',\n    ν: 'n',\n    ξ: '3',\n    ο: 'o',\n    π: 'p',\n    ρ: 'r',\n    σ: 's',\n    τ: 't',\n    υ: 'y',\n    φ: 'f',\n    χ: 'x',\n    ψ: 'ps',\n    ω: 'w',\n    ά: 'a',\n    έ: 'e',\n    ί: 'i',\n    ό: 'o',\n    ύ: 'y',\n    ή: 'h',\n    ώ: 'w',\n    ς: 's',\n    ϊ: 'i',\n    ΰ: 'y',\n    ϋ: 'y',\n    ΐ: 'i',\n    Α: 'A',\n    Β: 'B',\n    Γ: 'G',\n    Δ: 'D',\n    Ε: 'E',\n    Ζ: 'Z',\n    Η: 'H',\n    Θ: '8',\n    Ι: 'I',\n    Κ: 'K',\n    Λ: 'L',\n    Μ: 'M',\n    Ν: 'N',\n    Ξ: '3',\n    Ο: 'O',\n    Π: 'P',\n    Ρ: 'R',\n    Σ: 'S',\n    Τ: 'T',\n    Υ: 'Y',\n    Φ: 'F',\n    Χ: 'X',\n    Ψ: 'PS',\n    Ω: 'W',\n    Ά: 'A',\n    Έ: 'E',\n    Ί: 'I',\n    Ό: 'O',\n    Ύ: 'Y',\n    Ή: 'H',\n    Ώ: 'W',\n    Ϊ: 'I',\n    Ϋ: 'Y',\n    // turkish\n    ş: 's',\n    Ş: 'S',\n    ı: 'i',\n    İ: 'I',\n    ğ: 'g',\n    Ğ: 'G',\n    // russian\n    а: 'a',\n    б: 'b',\n    в: 'v',\n    г: 'g',\n    д: 'd',\n    е: 'e',\n    ё: 'yo',\n    ж: 'zh',\n    з: 'z',\n    и: 'i',\n    й: 'j',\n    к: 'k',\n    л: 'l',\n    м: 'm',\n    н: 'n',\n    о: 'o',\n    п: 'p',\n    р: 'r',\n    с: 's',\n    т: 't',\n    у: 'u',\n    ф: 'f',\n    х: 'h',\n    ц: 'c',\n    ч: 'ch',\n    ш: 'sh',\n    щ: 'sh',\n    ъ: 'u',\n    ы: 'y',\n    ь: '',\n    э: 'e',\n    ю: 'yu',\n    я: 'ya',\n    А: 'A',\n    Б: 'B',\n    В: 'V',\n    Г: 'G',\n    Д: 'D',\n    Е: 'E',\n    Ё: 'Yo',\n    Ж: 'Zh',\n    З: 'Z',\n    И: 'I',\n    Й: 'J',\n    К: 'K',\n    Л: 'L',\n    М: 'M',\n    Н: 'N',\n    О: 'O',\n    П: 'P',\n    Р: 'R',\n    С: 'S',\n    Т: 'T',\n    У: 'U',\n    Ф: 'F',\n    Х: 'H',\n    Ц: 'C',\n    Ч: 'Ch',\n    Ш: 'Sh',\n    Щ: 'Sh',\n    Ъ: 'U',\n    Ы: 'Y',\n    Ь: '',\n    Э: 'E',\n    Ю: 'Yu',\n    Я: 'Ya',\n    // ukranian\n    Є: 'Ye',\n    І: 'I',\n    Ї: 'Yi',\n    Ґ: 'G',\n    є: 'ye',\n    і: 'i',\n    ї: 'yi',\n    ґ: 'g',\n    // czech\n    č: 'c',\n    ď: 'd',\n    ě: 'e',\n    ň: 'n',\n    ř: 'r',\n    š: 's',\n    ť: 't',\n    ů: 'u',\n    ž: 'z',\n    Č: 'C',\n    Ď: 'D',\n    Ě: 'E',\n    Ň: 'N',\n    Ř: 'R',\n    Š: 'S',\n    Ť: 'T',\n    Ů: 'U',\n    Ž: 'Z',\n    // slovak\n    ľ: 'l',\n    ĺ: 'l',\n    ŕ: 'r',\n    Ľ: 'L',\n    Ĺ: 'L',\n    Ŕ: 'R',\n    // polish\n    ą: 'a',\n    ć: 'c',\n    ę: 'e',\n    ł: 'l',\n    ń: 'n',\n    ś: 's',\n    ź: 'z',\n    ż: 'z',\n    Ą: 'A',\n    Ć: 'C',\n    Ę: 'E',\n    Ł: 'L',\n    Ń: 'N',\n    Ś: 'S',\n    Ź: 'Z',\n    Ż: 'Z',\n    // latvian\n    ā: 'a',\n    ē: 'e',\n    ģ: 'g',\n    ī: 'i',\n    ķ: 'k',\n    ļ: 'l',\n    ņ: 'n',\n    ū: 'u',\n    Ā: 'A',\n    Ē: 'E',\n    Ģ: 'G',\n    Ī: 'I',\n    Ķ: 'K',\n    Ļ: 'L',\n    Ņ: 'N',\n    Ū: 'U',\n    // arabic\n    أ: 'a',\n    إ: 'i',\n    ب: 'b',\n    ت: 't',\n    ث: 'th',\n    ج: 'g',\n    ح: 'h',\n    خ: 'kh',\n    د: 'd',\n    ذ: 'th',\n    ر: 'r',\n    ز: 'z',\n    س: 's',\n    ش: 'sh',\n    ص: 's',\n    ض: 'd',\n    ط: 't',\n    ظ: 'th',\n    ع: 'aa',\n    غ: 'gh',\n    ف: 'f',\n    ق: 'k',\n    ك: 'k',\n    ل: 'l',\n    م: 'm',\n    ن: 'n',\n    ه: 'h',\n    و: 'o',\n    ي: 'y',\n    ء: 'aa',\n    ة: 'a',\n    // farsi\n    آ: 'a',\n    ا: 'a',\n    پ: 'p',\n    ژ: 'zh',\n    گ: 'g',\n    چ: 'ch',\n    ک: 'k',\n    ی: 'i',\n    // lithuanian\n    ė: 'e',\n    į: 'i',\n    ų: 'u',\n    Ė: 'E',\n    Į: 'I',\n    Ų: 'U',\n    // romanian\n    ț: 't',\n    Ț: 'T',\n    ţ: 't',\n    Ţ: 'T',\n    ș: 's',\n    Ș: 'S',\n    ă: 'a',\n    Ă: 'A',\n    // vietnamese\n    Ạ: 'A',\n    Ả: 'A',\n    Ầ: 'A',\n    Ấ: 'A',\n    Ậ: 'A',\n    Ẩ: 'A',\n    Ẫ: 'A',\n    Ằ: 'A',\n    Ắ: 'A',\n    Ặ: 'A',\n    Ẳ: 'A',\n    Ẵ: 'A',\n    Ẹ: 'E',\n    Ẻ: 'E',\n    Ẽ: 'E',\n    Ề: 'E',\n    Ế: 'E',\n    Ệ: 'E',\n    Ể: 'E',\n    Ễ: 'E',\n    Ị: 'I',\n    Ỉ: 'I',\n    Ĩ: 'I',\n    Ọ: 'O',\n    Ỏ: 'O',\n    Ồ: 'O',\n    Ố: 'O',\n    Ộ: 'O',\n    Ổ: 'O',\n    Ỗ: 'O',\n    Ơ: 'O',\n    Ờ: 'O',\n    Ớ: 'O',\n    Ợ: 'O',\n    Ở: 'O',\n    Ỡ: 'O',\n    Ụ: 'U',\n    Ủ: 'U',\n    Ũ: 'U',\n    Ư: 'U',\n    Ừ: 'U',\n    Ứ: 'U',\n    Ự: 'U',\n    Ử: 'U',\n    Ữ: 'U',\n    Ỳ: 'Y',\n    Ỵ: 'Y',\n    Ỷ: 'Y',\n    Ỹ: 'Y',\n    Đ: 'D',\n    ạ: 'a',\n    ả: 'a',\n    ầ: 'a',\n    ấ: 'a',\n    ậ: 'a',\n    ẩ: 'a',\n    ẫ: 'a',\n    ằ: 'a',\n    ắ: 'a',\n    ặ: 'a',\n    ẳ: 'a',\n    ẵ: 'a',\n    ẹ: 'e',\n    ẻ: 'e',\n    ẽ: 'e',\n    ề: 'e',\n    ế: 'e',\n    ệ: 'e',\n    ể: 'e',\n    ễ: 'e',\n    ị: 'i',\n    ỉ: 'i',\n    ĩ: 'i',\n    ọ: 'o',\n    ỏ: 'o',\n    ồ: 'o',\n    ố: 'o',\n    ộ: 'o',\n    ổ: 'o',\n    ỗ: 'o',\n    ơ: 'o',\n    ờ: 'o',\n    ớ: 'o',\n    ợ: 'o',\n    ở: 'o',\n    ỡ: 'o',\n    ụ: 'u',\n    ủ: 'u',\n    ũ: 'u',\n    ư: 'u',\n    ừ: 'u',\n    ứ: 'u',\n    ự: 'u',\n    ử: 'u',\n    ữ: 'u',\n    ỳ: 'y',\n    ỵ: 'y',\n    ỷ: 'y',\n    ỹ: 'y',\n    đ: 'd',\n    // kazakh\n    Ә: 'AE',\n    ә: 'ae',\n    Ғ: 'GH',\n    ғ: 'gh',\n    Қ: 'KH',\n    қ: 'kh',\n    Ң: 'NG',\n    ң: 'ng',\n    Ү: 'UE',\n    ү: 'ue',\n    Ұ: 'U',\n    ұ: 'u',\n    Һ: 'H',\n    һ: 'h',\n    Ө: 'OE',\n    ө: 'oe',\n    // serbian\n    ђ: 'dj',\n    ј: 'j',\n    љ: 'lj',\n    њ: 'nj',\n    ћ: 'c',\n    џ: 'dz',\n    Ђ: 'Dj',\n    Ј: 'j',\n    Љ: 'Lj',\n    Њ: 'Nj',\n    Ћ: 'C',\n    Џ: 'Dz',\n    ǌ: 'nj',\n    ǉ: 'lj',\n    ǋ: 'NJ',\n    ǈ: 'LJ',\n    // hindi\n    अ: 'a',\n    आ: 'aa',\n    ए: 'e',\n    ई: 'ii',\n    ऍ: 'ei',\n    ऎ: 'ae',\n    ऐ: 'ai',\n    इ: 'i',\n    ओ: 'o',\n    ऑ: 'oi',\n    ऒ: 'oii',\n    ऊ: 'uu',\n    औ: 'ou',\n    उ: 'u',\n    ब: 'B',\n    भ: 'Bha',\n    च: 'Ca',\n    छ: 'Chha',\n    ड: 'Da',\n    ढ: 'Dha',\n    फ: 'Fa',\n    ग: 'Ga',\n    घ: 'Gha',\n    ग़: 'Ghi',\n    ह: 'Ha',\n    ज: 'Ja',\n    झ: 'Jha',\n    क: 'Ka',\n    ख: 'Kha',\n    ख़: 'Khi',\n    ल: 'L',\n    ळ: 'Li',\n    ऌ: 'Li',\n    ऴ: 'Lii',\n    ॡ: 'Lii',\n    म: 'Ma',\n    न: 'Na',\n    ङ: 'Na',\n    ञ: 'Nia',\n    ण: 'Nae',\n    ऩ: 'Ni',\n    ॐ: 'oms',\n    प: 'Pa',\n    क़: 'Qi',\n    र: 'Ra',\n    ऋ: 'Ri',\n    ॠ: 'Ri',\n    ऱ: 'Ri',\n    स: 'Sa',\n    श: 'Sha',\n    ष: 'Shha',\n    ट: 'Ta',\n    त: 'Ta',\n    ठ: 'Tha',\n    द: 'Tha',\n    थ: 'Tha',\n    ध: 'Thha',\n    ड़: 'ugDha',\n    ढ़: 'ugDhha',\n    व: 'Va',\n    य: 'Ya',\n    य़: 'Yi',\n    ज़: 'Za',\n    // azerbaijani\n    ə: 'e',\n    Ə: 'E',\n    // georgian\n    ა: 'a',\n    ბ: 'b',\n    გ: 'g',\n    დ: 'd',\n    ე: 'e',\n    ვ: 'v',\n    ზ: 'z',\n    თ: 't',\n    ი: 'i',\n    კ: 'k',\n    ლ: 'l',\n    მ: 'm',\n    ნ: 'n',\n    ო: 'o',\n    პ: 'p',\n    ჟ: 'zh',\n    რ: 'r',\n    ს: 's',\n    ტ: 't',\n    უ: 'u',\n    ფ: 'p',\n    ქ: 'k',\n    ღ: 'gh',\n    ყ: 'q',\n    შ: 'sh',\n    ჩ: 'ch',\n    ც: 'ts',\n    ძ: 'dz',\n    წ: 'ts',\n    ჭ: 'ch',\n    ხ: 'kh',\n    ჯ: 'j',\n    ჰ: 'h',\n    // hebrew\n    ב: 'v',\n    גּ: 'g',\n    ג: 'g',\n    ד: 'd',\n    דּ: 'd',\n    ה: 'h',\n    ו: 'v',\n    ז: 'z',\n    ח: 'h',\n    ט: 't',\n    י: 'y',\n    כ: 'kh',\n    ך: 'kh',\n    ל: 'l',\n    מ: 'm',\n    ם: 'm',\n    נ: 'n',\n    ן: 'n',\n    ס: 's',\n    פ: 'f',\n    ף: 'f',\n    ץ: 'ts',\n    צ: 'ts',\n    ק: 'k',\n    ר: 'r',\n    תּ: 't',\n    ת: 't'\n  }\n\n  slug.charmap = Object.assign({}, initialCharmap)\n  slug.multicharmap = Object.assign({}, initialMulticharmap)\n  slug.defaults = {\n    charmap: slug.charmap,\n    mode: 'pretty',\n    modes: {\n      rfc3986: {\n        replacement: '-',\n        remove: null,\n        lower: true,\n        charmap: slug.charmap,\n        multicharmap: slug.multicharmap,\n        trim: true\n      },\n      pretty: {\n        replacement: '-',\n        remove: null,\n        lower: true,\n        charmap: slug.charmap,\n        multicharmap: slug.multicharmap,\n        trim: true\n      }\n    },\n    multicharmap: slug.multicharmap\n  }\n\n  slug.reset = function () {\n    slug.defaults.modes.rfc3986.charmap = slug.defaults.modes.pretty.charmap = slug.charmap = slug.defaults.charmap = Object.assign({}, initialCharmap)\n    slug.defaults.modes.rfc3986.multicharmap = slug.defaults.modes.pretty.multicharmap = slug.multicharmap = slug.defaults.multicharmap = Object.assign({}, initialMulticharmap)\n    defaultLocale = ''\n  }\n\n  slug.extend = function (customMap) {\n    const keys = Object.keys(customMap)\n    const multi = {}\n    const single = {}\n    for (let i = 0; i < keys.length; i++) {\n      if (keys[i].length > 1) {\n        multi[keys[i]] = customMap[keys[i]]\n      } else {\n        single[keys[i]] = customMap[keys[i]]\n      }\n    }\n    Object.assign(slug.charmap, single)\n    Object.assign(slug.multicharmap, multi)\n  }\n\n  slug.setLocale = function (locale) {\n    defaultLocale = locales[locale] || {}\n  }\n\n  /* global define */\n  // Be compatible with different module systems\n\n  if (true) { // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () { return slug }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  } else {}\n}(this))\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/slug/slug.js\n");

/***/ })

});